generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  MANAGER
  OWNER
}

enum IsActive {
  ACTIVE
  INACTIVE
  BLOCKED
}

// user info
model User {
  id            Int             @id @default(autoincrement())
  name          String
  email         String          @unique
  password      String
  avater        String?
  skills        String[]
  address       String          @db.VarChar(150)
  phone         BigInt
  isActive      IsActive        @default(ACTIVE)
  role          Role            @default(OWNER)
  isVerified    Boolean         @default(true)
  github        String
  linkedin      String
  twitter       String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @default(now())
  Blog          Blog[]
  Project       Project[]
  WorkExperince WorkExperince[]
}

model Blog {
  id            Int      @id @default(autoincrement())
  title         String   @db.VarChar(255)
  content       String?
  images        String[]
  published     Boolean  @default(false)
  publishedDate DateTime @default(now())
  slug          String
  authorId      Int
  author        User     @relation(fields: [authorId], references: [id])
  tags          String[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Project {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(255)
  description String   @db.VarChar(500)
  image       String
  techStack   String[]
  liveUrl     String
  githubUrl   String
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model WorkExperince {
  id          Int      @unique @default(autoincrement())
  companyName String
  role        String   @db.VarChar(80)
  descreption String
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  startDate   DateTime
  endDate     DateTime
}
